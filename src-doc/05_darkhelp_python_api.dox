/** @page PythonAPI %DarkHelp Python API

The %DarkHelp @p Python API uses the simplified @ref CAPI.

@note The Python API does not expose 100% of what is available in the @ref API.

Calls such as @p DarkHelp.EnableNamesIncludePercentage() map to the @p C API @ref EnableNamesIncludePercentage() which is documented as @ref DarkHelp::Config::names_include_percentage.  Using this API, %DarkHelp can be used with advanced features such as tiling and snapping.

Example code:

~~~~{.python}
import DarkHelp

dh = DarkHelp.CreateDarkHelpNN("cars.cfg".encode("utf-8"), "cars.names".encode("utf-8"), "cars.weights".encode("utf-8"))

DarkHelp.SetThreshold(dh, 0.35)
DarkHelp.SetAnnotationLineThickness(dh, 1)
DarkHelp.EnableTiles(dh, True)
DarkHelp.EnableCombineTilePredictions(dh, True)
DarkHelp.EnableOnlyCombineSimilarPredictions(dh, False)
DarkHelp.SetTileEdgeFactor(dh, 0.18f)
DarkHelp.SetTileRectFactor(dh, 1.22f)

DarkHelp.PredictFN(dh, "car_01.jpg".encode("utf-8"))
DarkHelp.Annotate(dh, "output.jpg".encode("utf-8"))
json = DarkHelp.GetPredictionResults(dh)

DarkHelp.DestroyDarkHelpNN(dh)

print(json.decode())
~~~~

See the sample file @p src-python/example.py which shows how to use the @p Python API.

Convenient links to some of the API call documentation to get started:

@li @ref DarkHelpVersion()
@li @ref CreateDarkHelpNN()
@li @ref SetThreshold()
@li @ref EnableTiles()
@li @ref EnableSnapping()
@li @ref SetAnnotationLineThickness()
@li @ref PredictFN()
@li @ref Annotate()
@li @ref GetPredictionResults()

*/
